{"ast":null,"code":"import { Buffer } from 'buffer';\n\nfunction setToken(token) {\n  localStorage.setItem('token', token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n\n  if (token) {\n    const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64'));\n\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  } else {\n    localStorage.removeItem('token');\n  }\n\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(Buffer.from(token.split('.')[1], 'base64')).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport { setToken, getToken, getUserFromToken, removeToken };","map":{"version":3,"sources":["/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/services/tokenService.js"],"names":["Buffer","setToken","token","localStorage","setItem","getToken","getItem","payload","JSON","parse","from","split","exp","Date","now","removeItem","getUserFromToken","user","removeToken"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACD;;AAED,SAASG,QAAT,GAAoB;AAClB,MAAIH,KAAK,GAAGC,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAZ;;AACA,MAAIJ,KAAJ,EAAW;AACT,UAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACU,IAAP,CAAYR,KAAK,CAACS,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAZ,EAAiC,QAAjC,CAAX,CAAhB;;AACA,QAAIJ,OAAO,CAACK,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAa,IAA/B,EAAqC;AACnCX,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACAb,MAAAA,KAAK,GAAG,IAAR;AACD;AACF,GAND,MAMO;AACLC,IAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACD;;AACD,SAAOb,KAAP;AACD;;AAED,SAASc,gBAAT,GAA4B;AAC1B,QAAMd,KAAK,GAAGG,QAAQ,EAAtB;AACA,SAAOH,KAAK,GACRM,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACU,IAAP,CAAYR,KAAK,CAACS,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAZ,EAAiC,QAAjC,CAAX,EAAuDM,IAD/C,GAER,IAFJ;AAGD;;AAED,SAASC,WAAT,GAAuB;AACrBf,EAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACD;;AAED,SAASd,QAAT,EAAmBI,QAAnB,EAA6BW,gBAA7B,EAA+CE,WAA/C","sourcesContent":["import { Buffer } from 'buffer'\n\nfunction setToken(token) {\n  localStorage.setItem('token', token)\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token')\n  if (token) {\n    const payload = JSON.parse(Buffer.from(token.split('.')[1], 'base64'))\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token')\n      token = null\n    }\n  } else {\n    localStorage.removeItem('token')\n  }\n  return token\n}\n\nfunction getUserFromToken() {\n  const token = getToken()\n  return token\n    ? JSON.parse(Buffer.from(token.split('.')[1], 'base64')).user\n    : null\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token')\n}\n\nexport { setToken, getToken, getUserFromToken, removeToken }\n"]},"metadata":{},"sourceType":"module"}