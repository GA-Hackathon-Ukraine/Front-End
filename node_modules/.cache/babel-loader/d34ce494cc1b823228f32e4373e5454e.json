{"ast":null,"code":"var _jsxFileName = \"/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/components/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from './LoginForm.module.css';\nimport * as authService from '../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    pw: ''\n  });\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    props.updateMessage('');\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      await authService.login(formData);\n      props.handleSignupOrLogin();\n      navigate('/');\n    } catch (err) {\n      props.updateMessage(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: styles.label,\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        id: \"email\",\n        value: formData.email,\n        name: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: styles.label,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        autoComplete: \"off\",\n        id: \"password\",\n        value: formData.pw,\n        name: \"pw\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"pCKY0HlsXhgBnSfkaA+ivooCme4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/components/LoginForm/LoginForm.jsx"],"names":["useState","Link","useNavigate","styles","authService","LoginForm","props","formData","setFormData","email","pw","navigate","handleChange","e","updateMessage","target","name","value","handleSubmit","evt","preventDefault","login","handleSignupOrLogin","err","message","container","inputContainer","label","button"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styles from './LoginForm.module.css'\nimport * as authService from '../../services/authService'\n\nconst LoginForm = props => {\n  const [formData, setFormData] = useState({\n    email: '',\n    pw: '',\n  })\n  const navigate = useNavigate()\n\n  const handleChange = e => {\n    props.updateMessage('')\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = async evt => {\n    evt.preventDefault()\n    try {\n      await authService.login(formData)\n      props.handleSignupOrLogin()\n      navigate('/')\n    } catch (err) {\n      props.updateMessage(err.message)\n    }\n  }\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      className={styles.container}\n    >\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"email\" className={styles.label}>Email</label>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          id=\"email\"\n          value={formData.email}\n          name=\"email\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"password\" className={styles.label}>Password</label>\n        <input\n          type=\"password\"\n          autoComplete=\"off\"\n          id=\"password\"\n          value={formData.pw}\n          name=\"pw\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <button className={styles.button}>Log In</button>\n        <Link to=\"/\">\n          <button>Cancel</button>\n        </Link>\n      </div>\n    </form>\n  )\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}