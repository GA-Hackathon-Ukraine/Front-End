{"ast":null,"code":"var _jsxFileName = \"/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/components/SignupForm/SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from './SignupForm.module.css';\nimport * as authService from '../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  });\n\n  const handleChange = e => {\n    props.updateMessage('');\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await authService.signup(formData);\n      props.handleSignupOrLogin();\n      navigate('/');\n    } catch (err) {\n      props.updateMessage(err.message);\n    }\n  };\n\n  const {\n    name,\n    email,\n    password,\n    passwordConf\n  } = formData;\n\n  const isFormInvalid = () => {\n    return !(name && email && password && password === passwordConf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        className: styles.label,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        id: \"name\",\n        value: name,\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: styles.label,\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        id: \"email\",\n        value: email,\n        name: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: styles.label,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        autoComplete: \"off\",\n        id: \"password\",\n        value: password,\n        name: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm\",\n        className: styles.label,\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        autoComplete: \"off\",\n        id: \"confirm\",\n        value: passwordConf,\n        name: \"passwordConf\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isFormInvalid(),\n        className: styles.button,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"VM0BVYq7FLGAudrKpyIgldaniAY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/components/SignupForm/SignupForm.jsx"],"names":["useState","Link","useNavigate","styles","authService","SignupForm","props","navigate","formData","setFormData","name","email","password","passwordConf","handleChange","e","updateMessage","target","value","handleSubmit","preventDefault","signup","handleSignupOrLogin","err","message","isFormInvalid","container","inputContainer","label","button"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styles from './SignupForm.module.css'\nimport * as authService from '../../services/authService'\n\nconst SignupForm = props => {\n  const navigate = useNavigate()\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n  })\n\n  const handleChange = e => {\n    props.updateMessage('')\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      await authService.signup(formData)\n      props.handleSignupOrLogin()\n      navigate('/')\n    } catch (err) {\n      props.updateMessage(err.message)\n    }\n  }\n\n  const { name, email, password, passwordConf } = formData\n\n  const isFormInvalid = () => {\n    return !(name && email && password && password === passwordConf)\n  }\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n      className={styles.container}\n    >\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"name\" className={styles.label}>Name</label>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          id=\"name\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"email\" className={styles.label}>Email</label>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          id=\"email\"\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"password\" className={styles.label}>Password</label>\n        <input\n          type=\"password\"\n          autoComplete=\"off\"\n          id=\"password\"\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={styles.inputContainer}>\n        <label htmlFor=\"confirm\" className={styles.label}>\n          Confirm Password\n        </label>\n        <input\n          type=\"password\"\n          autoComplete=\"off\"\n          id=\"confirm\"\n          value={passwordConf}\n          name=\"passwordConf\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className={styles.inputContainer}>\n        <button disabled={isFormInvalid()} className={styles.button}>\n          Sign Up\n        </button>\n        <Link to=\"/\">\n          <button>Cancel</button>\n        </Link>\n      </div>\n    </form>\n  )\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}