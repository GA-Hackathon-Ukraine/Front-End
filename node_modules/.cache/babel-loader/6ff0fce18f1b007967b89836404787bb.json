{"ast":null,"code":"var _jsxFileName = \"/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/pages/Landing/Landing.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from './Landing.module.css';\nimport { Link } from 'react-router-dom';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport JobsMap from '../../components/JobsMap/JobsMap';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = _ref => {\n  _s();\n\n  let {\n    user,\n    jobs,\n    setJobs\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  let filteredJobs = jobs.filter(job => job.position.toLowerCase().trim().includes(search.toLowerCase().trim()));\n  const listJobs = filteredJobs.map((element, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"\",\n        children: element.name\n      }, `${element.name}-part-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, `part-id-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  }); // const getFilteredJobs = () => {\n  //   let searchTerm = search.toLowerCase()\n  //   return jobs.filter(v => {\n  // \t\tlet lowerCaseName = v.company.toLowerCase()\n  //     return lowerCaseName.includes(searchTerm)\n  //   })\n  // }\n\n  const getFilteredLocation = () => {\n    let searchTerm = location.toLowerCase();\n    return jobs.filter(v => {\n      let lowerCaseName = v.city.toLowerCase();\n      return lowerCaseName.includes(searchTerm);\n    });\n  };\n\n  const getFilteredPosition = () => {\n    let searchTerm = position.toLowerCase();\n    return jobs.filter(v => {\n      let lowerCaseName = v.position.toLowerCase();\n      return lowerCaseName.includes(searchTerm);\n    });\n  };\n\n  const filteredPosition1 = getFilteredPosition();\n  const filteredLocation1 = getFilteredLocation(); // const filteredPosition1 = getFilteredPosition()\n  // const arr = [...filteredJobs1, ...filteredLocation1]\n  // const doubleFiltered = [...new Set([...filteredJobs1, ...filteredLocation1])]\n\n  const combinedFilteredSearch = [];\n  filteredPosition1.forEach(job => {\n    if (filteredLocation1.includes(job)) {\n      combinedFilteredSearch.push(job);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      setLocation: setLocation,\n      setSearch: setSearch,\n      search: search,\n      position: position,\n      setPosition: setPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobsMap, {\n      newJobs: combinedFilteredSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Landing, \"Was7cWagodIquUaE/ESD8ar7EzY=\");\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Users/reneeskibinski/code/sei/hackathon/ukraine-front-end/src/pages/Landing/Landing.jsx"],"names":["styles","Link","SearchForm","JobsMap","useState","Landing","user","jobs","setJobs","search","setSearch","location","setLocation","position","setPosition","filteredJobs","filter","job","toLowerCase","trim","includes","listJobs","map","element","idx","name","getFilteredLocation","searchTerm","v","lowerCaseName","city","getFilteredPosition","filteredPosition1","filteredLocation1","combinedFilteredSearch","forEach","push","container"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,OAAO,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAA4B;AAE3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIW,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACJ,QAAJ,CAAaK,WAAb,GAA2BC,IAA3B,GAAkCC,QAAlC,CAA2CX,MAAM,CAACS,WAAP,GAAqBC,IAArB,EAA3C,CAAnB,CAAnB;AAGA,QAAME,QAAQ,GAAGN,YAAY,CAACO,GAAb,CAAiB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAClD,wBACI;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,EAAT;AAAA,kBAAkDD,OAAO,CAACE;AAA1D,SAAmB,GAAEF,OAAO,CAACE,IAAK,SAAQD,GAAI,EAA9C;AAAA;AAAA;AAAA;AAAA;AADA,OAAW,WAAUA,GAAI,EAAzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD,GANgB,CAAjB,CAT2C,CAiB3C;AACA;AACA;AACD;AACC;AACA;AACA;;AACA,QAAME,mBAAmB,GAAG,MAAM;AAChC,QAAIC,UAAU,GAAGhB,QAAQ,CAACO,WAAT,EAAjB;AACA,WAAOX,IAAI,CAACS,MAAL,CAAYY,CAAC,IAAI;AACzB,UAAIC,aAAa,GAAGD,CAAC,CAACE,IAAF,CAAOZ,WAAP,EAApB;AACG,aAAOW,aAAa,CAACT,QAAd,CAAuBO,UAAvB,CAAP;AACD,KAHM,CAAP;AAID,GAND;;AAQA,QAAMI,mBAAmB,GAAG,MAAM;AAChC,QAAIJ,UAAU,GAAGd,QAAQ,CAACK,WAAT,EAAjB;AACA,WAAOX,IAAI,CAACS,MAAL,CAAYY,CAAC,IAAI;AACzB,UAAIC,aAAa,GAAGD,CAAC,CAACf,QAAF,CAAWK,WAAX,EAApB;AACG,aAAOW,aAAa,CAACT,QAAd,CAAuBO,UAAvB,CAAP;AACD,KAHM,CAAP;AAID,GAND;;AAQA,QAAMK,iBAAiB,GAAGD,mBAAmB,EAA7C;AACA,QAAME,iBAAiB,GAAGP,mBAAmB,EAA7C,CAzC2C,CA0C3C;AACA;AACA;;AAGA,QAAMQ,sBAAsB,GAAG,EAA/B;AAEAF,EAAAA,iBAAiB,CAACG,OAAlB,CAA2BlB,GAAD,IAAS;AACjC,QAAIgB,iBAAiB,CAACb,QAAlB,CAA2BH,GAA3B,CAAJ,EAAqC;AACnCiB,MAAAA,sBAAsB,CAACE,IAAvB,CAA4BnB,GAA5B;AACD;AACF,GAJD;AAMA,sBACE;AAAM,IAAA,SAAS,EAAEjB,MAAM,CAACqC,SAAxB;AAAA,4BAAmC;AAAA;AAAA;AAAA;AAAA,YAAnC,eAEE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEzB,WAAzB;AAAsC,MAAA,SAAS,EAAEF,SAAjD;AAA4D,MAAA,MAAM,EAAED,MAApE;AAA4E,MAAA,QAAQ,EAAEI,QAAtF;AAAgG,MAAA,WAAW,EAAEC;AAA7G;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEoB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9DD;;GAAM7B,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import styles from './Landing.module.css'\nimport { Link } from 'react-router-dom'\nimport SearchForm from '../../components/SearchForm/SearchForm'\nimport JobsMap from '../../components/JobsMap/JobsMap'\nimport { useState } from 'react'\n\nconst Landing = ({ user, jobs, setJobs }) => {\n\n  const [search, setSearch] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [position, setPosition] = useState(\"\")\n\n  let filteredJobs = jobs.filter(job => job.position.toLowerCase().trim().includes(search.toLowerCase().trim()))\n\n    \n  const listJobs = filteredJobs.map((element, idx) => {\n    return (      \n        <div key={`part-id-${idx}`}>      \n        <Link to=''  key={`${element.name}-part-${idx}`}>{element.name}</Link>\n      </div>\n    );\n  });\n\n  // const getFilteredJobs = () => {\n  //   let searchTerm = search.toLowerCase()\n  //   return jobs.filter(v => {\n\t// \t\tlet lowerCaseName = v.company.toLowerCase()\n  //     return lowerCaseName.includes(searchTerm)\n  //   })\n  // }\n  const getFilteredLocation = () => {\n    let searchTerm = location.toLowerCase()\n    return jobs.filter(v => {\n\t\t\tlet lowerCaseName = v.city.toLowerCase()\n      return lowerCaseName.includes(searchTerm)\n    })\n  }\n\n  const getFilteredPosition = () => {\n    let searchTerm = position.toLowerCase()\n    return jobs.filter(v => {\n\t\t\tlet lowerCaseName = v.position.toLowerCase()\n      return lowerCaseName.includes(searchTerm)\n    })\n  }\n  \n  const filteredPosition1 = getFilteredPosition()\n  const filteredLocation1 = getFilteredLocation()\n  // const filteredPosition1 = getFilteredPosition()\n  // const arr = [...filteredJobs1, ...filteredLocation1]\n  // const doubleFiltered = [...new Set([...filteredJobs1, ...filteredLocation1])]\n \n\n  const combinedFilteredSearch = [];\n\n  filteredPosition1.forEach((job) => {\n    if (filteredLocation1.includes(job)) {\n      combinedFilteredSearch.push(job)\n    }\n  })\n\n  return (\n    <main className={styles.container}><br />\n      {/* <h1>hello, {user ? user.name : 'friend'}</h1> */}\n      <SearchForm setLocation={setLocation} setSearch={setSearch} search={search} position={position} setPosition={setPosition}/>\n      <JobsMap newJobs={combinedFilteredSearch}/>\n    </main>\n  )\n}\n\nexport default Landing"]},"metadata":{},"sourceType":"module"}